{"version":3,"sources":["icon-moon.svg","icon-company.svg","icon-location.svg","icon-twitter.svg","icon-website.svg","components/DevFinder.js","App.js","index.js"],"names":["useStyles","makeStyles","DevFinder","classes","useState","user","setUser","changedName","setChangedName","name","setName","fetchData","useCallback","fetch","then","res","json","data","useEffect","Typography","src","moon","alt","Paper","TextField","id","label","className","text","onChange","e","target","value","Button","variant","size","color","onClick","elevation","Grid","container","item","md","Avatar","login","bio","moment","created_at","format","public_repos","followers","following","location","website","blog","twitter","twitter_username","company","div","display","flexDirection","justifyContent","alignItems","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7a284f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-moon.cce754ce.svg\";","export default __webpack_public_path__ + \"static/media/icon-company.6f78ffb3.svg\";","export default __webpack_public_path__ + \"static/media/icon-location.f11c5487.svg\";","export default __webpack_public_path__ + \"static/media/icon-twitter.f6a2a695.svg\";","export default __webpack_public_path__ + \"static/media/icon-website.b7923f6c.svg\";","import { Button, Paper, TextField, Typography, Avatar, Grid} from '@material-ui/core';\nimport React, { useCallback, useEffect, useState } from 'react'\nimport { makeStyles } from '@material-ui/core'\nimport moment from 'moment'\n\nimport moon from '../icon-moon.svg'\nimport company from '../icon-company.svg'\nimport location from '../icon-location.svg'\nimport twitter from '../icon-twitter.svg'\nimport website from '../icon-website.svg'\n\nconst useStyles = makeStyles({\n    \n})\n\nconst DevFinder = () => {\n    const classes = useStyles()\n    const [user, setUser] = useState({})\n    const [changedName, setChangedName] = useState('')\n    const [name, setName] = useState('octocat')\n\n    const fetchData = useCallback(() => {\n        fetch(`https://api.github.com/users/${name}`)\n            .then(res => res.json())\n            .then(data => setUser(data))\n    },[name])\n\n    useEffect(() => {\n        fetchData()\n    },[fetchData])\n    return (\n        <div>\n            <div>\n                <Typography>\n                    devfinder\n                </Typography>\n                <div>\n                    <Typography>\n                        Dark\n                    </Typography>\n                    <img src={moon} alt=\"moon\"/>\n                </div>\n            </div>\n            <Paper>\n                <TextField \n                    id=\"standard-basic\" \n                    label=\"Search Github username...\" \n                    className={classes.text} \n                    onChange={e => {\n                        setChangedName(e.target.value)\n                    }}/>\n                <Button \n                        variant=\"contained\" \n                        size=\"small\" \n                        color=\"primary\"\n                        onClick={() => {\n                                setName(changedName)\n                                fetchData()\n                            }}\n                        >\n                        Search\n                </Button>\n            </Paper>\n            <Paper elevation={0}>\n                <Grid container>\n                    <Grid item md={3}>\n                        <Avatar alt=\"avatar\" src=\"\"/>\n                    </Grid>\n                    <Grid item md={9}>\n                        <Grid container>\n                            <Grid item md={6}>\n                                <Typography>{user.name}</Typography>\n                                <Typography>{user.login}</Typography>\n                                <br />\n                                <Typography>{user.bio ?? \"This profile has no bio\"}</Typography>\n                            </Grid>\n                            <Grid item md={6}>\n                                <Typography>{moment(user.created_at).format(\"D MMM YYYY\")}</Typography>\n                            </Grid>\n                        </Grid>\n                        <Paper>\n                            <Grid container>\n                                <Grid item md={4}>\n                                    <Typography>\n                                        Repos <br />\n                                        {user.public_repos}\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={4}>\n                                    <Typography>\n                                        Followers <br />\n                                        {user.followers}\n                                    </Typography>\n                                </Grid>\n                                <Grid item md={4}>\n                                    <Typography>\n                                        Following <br />\n                                        {user.following}\n                                    </Typography>\n                                </Grid>\n                            </Grid>\n                        </Paper> \n                        <Grid container>\n                                <Grid item md={6}>\n                                    <Typography>\n                                        <img src={location} alt=\"location\"/>\n                                        {user.location ?? \"Not Available\"}\n                                    </Typography>\n                                    <Typography>\n                                        <img src={website} alt=\"website\"/> \n                                        {user.blog ?? \"Not Available\"}\n                                    </Typography>    \n                                </Grid>\n                                <Grid item md={6}>\n                                    <Typography>\n                                        <img src={twitter} alt=\"twitter\"/>  \n                                        {user.twitter_username ?? \"Not Available\"}\n                                    </Typography>\n                                    <Typography>\n                                        <img src={company} alt=\"company\"/>  \n                                        {user.company ?? \"Not Available\"}\n                                    </Typography>  \n                                </Grid>\n                        </Grid>   \n                    </Grid>\n                </Grid>\n            </Paper>\n        </div>\n        \n        \n    );\n}\n \nexport default DevFinder;","import React from 'react'\n// import Container from '@material-ui/core/Container'\nimport DevFinder from './components/DevFinder'\nimport { makeStyles } from '@material-ui/core'\n\nconst useStyles = makeStyles({\n    div: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\", \n    },\n})\n\nconst App = () => {\n    const classes = useStyles()\n    return (\n       <div className={classes.div}>\n           <DevFinder />\n       </div>\n    )\n}\n \nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}